{
  "_args": [
    [
      {
        "raw": "wrap-promise@github:braintree/wrap-promise#1.0.0",
        "scope": null,
        "escapedName": "wrap-promise",
        "name": "wrap-promise",
        "rawSpec": "github:braintree/wrap-promise#1.0.0",
        "spec": "github:braintree/wrap-promise#1.0.0",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:braintree/wrap-promise.git#1.0.0",
          "sshUrl": "git+ssh://git@github.com/braintree/wrap-promise.git#1.0.0",
          "httpsUrl": "git+https://github.com/braintree/wrap-promise.git#1.0.0",
          "gitUrl": "git://github.com/braintree/wrap-promise.git#1.0.0",
          "shortcut": "github:braintree/wrap-promise#1.0.0",
          "directUrl": "https://raw.githubusercontent.com/braintree/wrap-promise/1.0.0/package.json"
        }
      },
      "/Users/mathew/Desktop/node-paypal/node_modules/braintree-web"
    ]
  ],
  "_from": "braintree/wrap-promise#1.0.0",
  "_id": "wrap-promise@1.0.0",
  "_inCache": true,
  "_location": "/wrap-promise",
  "_phantomChildren": {},
  "_requested": {
    "raw": "wrap-promise@github:braintree/wrap-promise#1.0.0",
    "scope": null,
    "escapedName": "wrap-promise",
    "name": "wrap-promise",
    "rawSpec": "github:braintree/wrap-promise#1.0.0",
    "spec": "github:braintree/wrap-promise#1.0.0",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:braintree/wrap-promise.git#1.0.0",
      "sshUrl": "git+ssh://git@github.com/braintree/wrap-promise.git#1.0.0",
      "httpsUrl": "git+https://github.com/braintree/wrap-promise.git#1.0.0",
      "gitUrl": "git://github.com/braintree/wrap-promise.git#1.0.0",
      "shortcut": "github:braintree/wrap-promise#1.0.0",
      "directUrl": "https://raw.githubusercontent.com/braintree/wrap-promise/1.0.0/package.json"
    }
  },
  "_requiredBy": [
    "/braintree-web"
  ],
  "_resolved": "git://github.com/braintree/wrap-promise.git#75b9bc987f07c20f8a1e575aaadc6a96c38a45c3",
  "_shasum": "08b822d9ffb4fcf8d97b1494a0d5b0a06eff0f8b",
  "_shrinkwrap": null,
  "_spec": "wrap-promise@github:braintree/wrap-promise#1.0.0",
  "_where": "/Users/mathew/Desktop/node-paypal/node_modules/braintree-web",
  "author": {
    "name": "Braintree",
    "email": "code@getbraintree.com"
  },
  "bugs": {
    "url": "https://github.com/braintree/wrap-promise/issues"
  },
  "dependencies": {},
  "description": "A small lib to return promises or use callbacks",
  "devDependencies": {
    "chai": "^3.5.0",
    "eslint": "^2.7.0",
    "eslint-config-braintree": "^1.0.2",
    "mocha": "^3.2.0",
    "sinon": "^1.17.7",
    "sinon-chai": "^2.8.0"
  },
  "files": [
    "wrap-promise",
    "lib/*"
  ],
  "gitHead": "75b9bc987f07c20f8a1e575aaadc6a96c38a45c3",
  "homepage": "https://github.com/braintree/wrap-promise#readme",
  "keywords": [],
  "license": "MIT",
  "main": "wrap-promise.js",
  "name": "wrap-promise",
  "optionalDependencies": {},
  "readme": "# wrap-promise\n\nSmall module to help support APIs that return a promise or use a callback.\n\n### Example\n\n```js\n// my-method.js\nvar wrapPromise = require('wrap-promise');\n\nfunction myMethod (arg) {\n  return new Promise(function (resolve, reject) {\n    doSomethingAsync(arg, function (err, response) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(response);\n    });\n  });\n}\n\nmodule.exports = wrapPromise(myMethod);\n\n// my-app.js\nvar myMethod = require('./my-method');\n\nmyMethod('foo').then(function (response) {\n  // do something with response\n}).catch(function (err) {\n  // handle error\n});\n\nmyMethod('foo', function (err, response) {\n  if (err) {\n    // handle error\n    return;\n  }\n\n  // do something with response\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/braintree/wrap-promise.git"
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "mocha"
  },
  "version": "1.0.0"
}
